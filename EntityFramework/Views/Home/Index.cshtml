@model IEnumerable<EntityFramework.Models.DTOs.ItemDTO>

@{
    ViewData["Title"] = "Items Management";
}

<div class="container">
    <h1 class="mt-4 mb-3">Items Management</h1>
    
    <div class="mb-3">
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add New Record
        </a>
    </div>

    <div class="table-responsive">
        <table id="itemsTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-item-id="@item.Id">
                        <td class="item-id">@item.Id</td>
                        <td class="item-name">@item.Name</td>
                        <td class="item-price">$@item.Price.ToString("F2")</td>
                        <td class="actions">
                            <button type="button" class="btn btn-info btn-sm edit-item">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button type="button" class="btn btn-danger btn-sm delete-item">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Edit button click handler
            $('.edit-item').on('click', function () {
                const row = $(this).closest('tr');
                const itemId = row.data('item-id');
                const nameCell = row.find('.item-name');
                const priceCell = row.find('.item-price');
                const actionsCell = row.find('.actions');
                
                // Current values
                const currentName = nameCell.text();
                const currentPrice = priceCell.text().replace('$', '');
                
                // Replace with form and input fields
                const formHtml = `
                    <form action="/Home/Edit" method="post" class="edit-item-form">
                        <input type="hidden" name="Id" value="${itemId}">
                        <input type="text" name="Name" class="form-control edit-name" value="${currentName}">
                    </form>
                `;
                
                const priceFormHtml = `
                    <input type="number" step="0.01" name="Price" form="edit-form-${itemId}" class="form-control edit-price" value="${currentPrice}">
                `;
                
                nameCell.html(formHtml);
                priceCell.html(priceFormHtml);
                
                // Add ID to the form for the price input to reference
                nameCell.find('form').attr('id', `edit-form-${itemId}`);
                
                // Replace buttons with save/cancel
                actionsCell.html(`
                    <button type="submit" form="edit-form-${itemId}" class="btn btn-success btn-sm save-item">
                        <i class="fas fa-save"></i> Save
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                `);
            });
            
            // Delete item
            $(document).on('click', '.delete-item', function () {
                const row = $(this).closest('tr');
                const itemId = row.data('item-id');
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Create a form for delete submission
                        const form = $('<form></form>').attr({
                            'method': 'post',
                            'action': '/Home/Delete'
                        });
                        
                        form.append($('<input>').attr({
                            'type': 'hidden',
                            'name': 'id',
                            'value': itemId
                        }));
                        
                        $('body').append(form);
                        form.submit();
                    }
                });
            });
        });
    </script>
}